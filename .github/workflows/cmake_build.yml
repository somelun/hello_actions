name: CMake build matrix

on:
  push:
    branches:
      - master
  pull_request: {}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Cmake
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

    # name: ${ { matrix.config.name } }
    # runs-on: ${ { matrix.config.os } }
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     config:
    #     - {
    #         name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
    #         os: windows-latest,
    #         build_type: "Release", cc: "cl", cxx: "cl",
    #         environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
    #       }
    #     - {
    #         name: "Windows Latest MinGW", artifact: "Windows-MinGW.tar.xz",
    #         os: windows-latest,
    #         build_type: "Release", cc: "gcc", cxx: "g++"
    #       }
    #     - {
    #         name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
    #         os: ubuntu-latest,
    #         build_type: "Release", cc: "gcc", cxx: "g++"
    #       }
    #     - {
    #         name: "macOS Latest Clang", artifact: "macOS.tar.xz",
    #         os: macos-latest,
    #         build_type: "Reease", cc: "clang", cxx: "clang++"
    #       }
